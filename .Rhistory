norm(mvrnorm(100, numeric(200), diag(200)), "2")
norm(mvrnorm(100, numeric(200), diag(200)), "2")^2
norm(mvrnorm(500, numeric(600), diag(600)), "2")
norm(mvrnorm(500, numeric(600), diag(600)), "2")^2
norm(mvrnorm(800, numeric(1600), diag(1600)), "2")^2
sqrt(4602.755)
sqrt(800)
sqrt(1600)
sqrt(log(1600)/800)
sqrt(log(1600)/800)^(-1)
x = mvrnorm(100, numeric(200), diag(200))
x
xx = t(X)%*%x
xx = t(x)%*%x
norm(x, "2")
norm(x, "2")^2
max(eigen(xx)$values)
max(eigen(xx)$values)/100
x = rnorm(100)
sqrt(sum(x^2))
sum(abs(x))/10
sum(abs(x))/10
60.08405
sqrt(800)
x = mvrnorm(100, numeric(200), diag(200))
norm(x, "2")
norm(x, "1")
norm(x, "I")
p = 200
n = 100
log(p)
log(p)^2
n/(log(p)^2)
setwd("~/Desktop/borg")
library(glmnet)
library(MASS)
library(igraph)
source("borg.R")
Reciprocal <- function(x){
n = length(x)
temp = c()
for(i in 1:n){
if(x[i] == 0) temp[i] = 0
else temp[i] = 1/x[i]
}
return(temp)
}
laplacian <- function (A, normalised = F)
{
n = dim(A)[1]
temp = apply(abs(A), 2, sum)
D = diag(temp, nrow = n)
temp1 = Reciprocal(sqrt(temp))
half.D = diag(temp1, nrow = n)
if (normalised == TRUE)
return(half.D %*% (D - A) %*% half.D)
if (normalised == FALSE)
return(D - A)
}
# Subject graph
n = 200
block = matrix(rbinom(5*5, 1, 1), 5, 5)
block[upper.tri(block)] = t(block)[upper.tri(block)]
diag(block) = 0
blist = replicate(40, block, FALSE)
adj_n = as.matrix(bdiag(blist))
adj_n
# Subject graph
n = 200
block = matrix(runif(25), 5, 5)
block[upper.tri(block)] = t(block)[upper.tri(block)]
diag(block) = 0
blist = replicate(40, block, FALSE)
adj_n = as.matrix(bdiag(blist))
block
L_n = laplacian(adj_n)
L_n
block
block = rbind(c(0, 0.17, 0.72), c(0.17, 0, 0.7), c(0.72, 0.7, 0))
block
laplacian(block)
inc = rbind(c(0.17, -0.17, 0), c(0.72, 0, -0.72), c(0, 0.7, -0.7))
inc
t(inc)%*%inc
t(t(inc)%*%inc)
inc2 = rbind(c(1, -1, 0), c(1, 0, -1), c(0, 1, -1))
t(inc2)%*%inc2
x = rnorm(100)
max(abs(x))
sum(abs(x))/100
sum(abs(x))/10
X
norm(adj_n, "2")
norm(adj_n, "I")
log(1000)
sqrt(log(1000))
exp(-sqrt(log(1000)))
exp(-sqrt(log(10000)))
exp(-sqrt(log(100000)))
log(1000)
log(10000)
sqrt(2)^sqrt(2)
sqrt(2)
sqrt(2)^sqrt(2)
sqrt(2)^sqrt(2)^sqrt(2)
sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)
sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)
sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)^sqrt(2)
1/0.92
load("/Users/asondhi/Desktop/lasso_corr_p300_n200_s20_rho0.8_iter100.RData")
results
results$power
results[,2]
hist(results[,2])
library(glmnet)
library(MASS)
library(igraph)
pm = diag(5)*0.2
pm
n = 200
gn = sample_sbm(2*n, pref.matrix = pm, block.sizes = rep(2*n/5, 5))
gn
plot(gn)
blockind = unlist(lapply(1:5, function(i) rep(i, 2*n/5)))
alpha_means = 5*c(-0.8, -0.4, 0, 0.4, 0.8)
alpha = sapply(1:(2*n), function(i) rnorm(1, alpha_means[blockind[i]], 0.2))
adj_n = get.adjacency(gn, sparse = FALSE)
Ln = laplacian(adj_n)
library(gtools)
??laplacian
Reciprocal <- function(x){
n = length(x)
temp = c()
for(i in 1:n){
if(x[i] == 0) temp[i] = 0
else temp[i] = 1/x[i]
}
return(temp)
}
# Compute Laplacian matrix of adjacency matrix A (works for weighted A)
laplacian <- function (A, normalised = F)
{
n = dim(A)[1]
temp = apply(abs(A), 2, sum)
D = diag(temp, nrow = n)
temp1 = Reciprocal(sqrt(temp))
half.D = diag(temp1, nrow = n)
if (normalised == TRUE)
return(half.D %*% (D - A) %*% half.D)
if (normalised == FALSE)
return(D - A)
}
blockind = unlist(lapply(1:5, function(i) rep(i, 2*n/5)))
alpha_means = 5*c(-0.8, -0.4, 0, 0.4, 0.8)
alpha = sapply(1:(2*n), function(i) rnorm(1, alpha_means[blockind[i]], 0.2))
adj_n = get.adjacency(gn, sparse = FALSE)
Ln = laplacian(adj_n)
blockinf
blockind
alpha_means
Ln[1:10,1:10]
Ln%*%alpha
sum(abs(Ln%*%alpha))
pm = diag(5)
gn = sample_sbm(2*n, pref.matrix = pm, block.sizes = rep(2*n/5, 5))
blockind = unlist(lapply(1:5, function(i) rep(i, 2*n/5)))
alpha_means = 5*c(-0.8, -0.4, 0, 0.4, 0.8)
alpha = sapply(1:(2*n), function(i) rnorm(1, alpha_means[blockind[i]], 0.2))
adj_n = get.adjacency(gn, sparse = FALSE)
Ln = laplacian(adj_n)
sum(abs(Ln%*%alpha))
pm = diag(5)*0.1
gn = sample_sbm(2*n, pref.matrix = pm, block.sizes = rep(2*n/5, 5))
blockind = unlist(lapply(1:5, function(i) rep(i, 2*n/5)))
alpha_means = 5*c(-0.8, -0.4, 0, 0.4, 0.8)
alpha = sapply(1:(2*n), function(i) rnorm(1, alpha_means[blockind[i]], 0.2))
adj_n = get.adjacency(gn, sparse = FALSE)
Ln = laplacian(adj_n)
sum(abs(Ln%*%alpha))
sum((Ln%*%alpha)^2)
sqrt(sum((Ln%*%alpha)^2)
)
1/37.89877
pm
Ln[1:5,1:5]
Ln[1:10,1:10]
plot(alpha)
summary(alpha[1:70])
2*n
2*n/5
summary(alpha[1:80])
alpha_means
exp(-3)
exp(-3)*0.01
exp(-2)*0.01
exp(-2.5)*0.01
exp(-2)
exp(-2.5)
exp(-3)
exp(-3)
exp(-5)
exp(-3)
exp(-2.5)
exp(-2)
seq(exp(-3), exp(1), length=30)
plot(seq(exp(-3), exp(1), length=30))
plot(exp(seq(-3, 1, length=30))
)
plot(exp(seq(-3, 1, length=30)))
exp(seq(-3, 1, length=30))
load("/Users/asondhi/Desktop/lc_analysis_rnc_tt0_npc5.RData")
results
results[[1]]
exp(-1.5)
load("/Users/asondhi/Desktop/project2 files/realdata/meta/kegg.RData")
kegg_metabs[[1]]
kegg_metabs
n = 200
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
library(Matrix)
p = 300
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
adj_p = as.matrix(bdiag(blist))
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
adj_p2 = as.matrix(bdiag(blist))
for (ix in 1:(p/cs - 1)) {
replace = adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p]
adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p] = rbinom(nrow(replace)*ncol(replace), 1, 0.001)
}
adj_p2[lower.tri(adj_p2)] = t(adj_p2)[lower.tri(adj_p2)]
addl[i] = sum(adj_p2 - adj_p)/2
}
library(igraph)
n = 200
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
library(Matrix)
p = 300
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
adj_p = as.matrix(bdiag(blist))
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
adj_p2 = as.matrix(bdiag(blist))
for (ix in 1:(p/cs - 1)) {
replace = adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p]
adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p] = rbinom(nrow(replace)*ncol(replace), 1, 0.001)
}
adj_p2[lower.tri(adj_p2)] = t(adj_p2)[lower.tri(adj_p2)]
addl[i] = sum(adj_p2 - adj_p)/2
}
library(igraph)
n = 200
addl = numeric(20)
pm = diag(5)
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
library(Matrix)
p = 300
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
adj_p = as.matrix(bdiag(blist))
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
adj_p2 = as.matrix(bdiag(blist))
for (ix in 1:(p/cs - 1)) {
replace = adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p]
adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p] = rbinom(nrow(replace)*ncol(replace), 1, 0.001)
}
adj_p2[lower.tri(adj_p2)] = t(adj_p2)[lower.tri(adj_p2)]
addl[i] = sum(adj_p2 - adj_p)/2
}
addl
n = 200
addl = numeric(20)
pm = diag(5)
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
addl
library(Matrix)
p = 300
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
adj_p = as.matrix(bdiag(blist))
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
adj_p2 = as.matrix(bdiag(blist))
for (ix in 1:(p/cs - 1)) {
replace = adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p]
adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p] = rbinom(nrow(replace)*ncol(replace), 1, 0.003)
}
adj_p2[lower.tri(adj_p2)] = t(adj_p2)[lower.tri(adj_p2)]
addl[i] = sum(adj_p2 - adj_p)/2
}
addl
n = 200
addl = numeric(20)
pm = diag(5)
pm[upper.tri(pm, diag=FALSE)] = 0.01
pm[lower.tri(pm)] = t(pm)[lower.tri(pm)]
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
addl
addl/3900
mean(addl/3900)
library(igraph)
n = 200
addl = numeric(20)
pm = diag(5)
pm[upper.tri(pm, diag=FALSE)] = 0.01
pm[lower.tri(pm)] = t(pm)[lower.tri(pm)]
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
mean(addl/3900)
library(Matrix)
p = 300
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
adj_p = as.matrix(bdiag(blist))
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
adj_p2 = as.matrix(bdiag(blist))
for (ix in 1:(p/cs - 1)) {
replace = adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p]
adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p] = rbinom(nrow(replace)*ncol(replace), 1, 0.003)
}
adj_p2[lower.tri(adj_p2)] = t(adj_p2)[lower.tri(adj_p2)]
addl[i] = sum(adj_p2 - adj_p)/2
}
mean(2*addl/sum(adj_p))
library(igraph)
n = 200
addl = numeric(20)
pm = diag(5)
pm[upper.tri(pm, diag=FALSE)] = 0.01
pm[lower.tri(pm)] = t(pm)[lower.tri(pm)]
for (i in 1:20) {
set.seed(i)
gn = sample_sbm(n, pref.matrix = pm, block.sizes = rep(n/5, 5))
addl[i] = length(E(gn)) - 3900
}
mean(addl/(3900 + addl))
library(Matrix)
p = 300
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
adj_p = as.matrix(bdiag(blist))
addl = numeric(20)
for (i in 1:20) {
set.seed(i)
adj_p2 = as.matrix(bdiag(blist))
for (ix in 1:(p/cs - 1)) {
replace = adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p]
adj_p2[1:cs + (ix-1)*cs, (1 + (ix)*cs):p] = rbinom(nrow(replace)*ncol(replace), 1, 0.003)
}
adj_p2[lower.tri(adj_p2)] = t(adj_p2)[lower.tri(adj_p2)]
addl[i] = sum(adj_p2 - adj_p)/2
}
mean(2*addl/sum(adj_p2))
load("/Users/asondhi/Desktop/borg_genlasso_corr-misspec_p300_n200_s20_rho1_iter20.RData")
results
colMeans(results)
results[,4:5]
res = results[,4:5]
res
colMeans(res)
s = 20
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs - 2, block, FALSE)
p = 300
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs - 2, block, FALSE)
blist
list(diag(10), diag(10), blist)
?replicate
?prepend
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
blist[[1]]
cs = s/2
block = rbind(c(0, rep(1, cs - 1)), cbind(1, matrix(0, cs - 1, cs - 1)))
blist = replicate(p/cs, block, FALSE)
blist[[1]] = matrix(0,cs,cs)
blist[[2]] = matrix(0,cs,cs)
blist
adj_p = as.matrix(bdiag(blist))
library(glmnet)
library(MASS)
library(igraph)
adj_p = as.matrix(bdiag(blist))
adj_p
??pcor
??parcor
library(pcalg)
??parcor
library(parcor)
plogis(2)
qlogis(2)
2*(1 - pnorm(1.96))
5*12 + 12*15 + 90 + 9*3 + 8*13
library(Rcpp)
vignette("Rcpp-package").
vignette("Rcpp-package")
library(devtools)
install.packages("devtools")
plogis(12)
plogis(-12)
12/13
plogis
e
exp(1)
exp(1)/(1 + exp(1))
plogis(1)
80435758145817515
80435758145817515^2
80435758145817515^3
(-80538738812075974)^3 + (80435758145817515)^3 + (12602123297335631)^3
(-80538738812075974)^3 + (80435758145817515)^3
(-80538738812075974)^3 + (80435758145817515)^3 + (2602123297335631)^3
(-80538738812075974)^3 + (80435758145817515)^3 + (12602123297335631)^3
install.packages("roxygen2")
vignette("namespace")
vignette("roxygen2")
?roxygenise
??roxygenise
library(roxygen2)
?roxygenise
N = 8000
n = 400
sqrt((0.5*0.5)/n)
(N - n)/(N - 1)
sqrt((N - n)/(N - 1))
sqrt((N - n)/(N - 1))*sqrt((0.5*0.5)/n)
1.96*0.025
p = 0.025
sqrt(p*(1-p)/n)
1.96*sqrt(p*(1-p)/n)
0.025 - 1.96*sqrt(p*(1-p)/n)
0.025 + 1.96*sqrt(p*(1-p)/n)
library(devtools)
library(RcppArmadillo)
RcppArmadillo.package.skeleton("glmfunk")
getwd()
setwd("~/glmfunk")
compileAttributes(verbose=TRUE)
library(Rcpp)
compileAttributes(verbose=TRUE)
library(tools)
package_native_routine_registration_skeleton("~/glmfunk")
package_native_routine_registration_skeleton("glmfunk")
setwd("~/")
package_native_routine_registration_skeleton("glmfunk")
library(roxygen2)
vignette("namespace")
getwd()
package_native_routine_registration_skeleton("glmfunk")
tools::package_native_routine_registration_skeleton("glmfunk")
tools::package_native_routine_registration_skeleton(".")
setwd("~/glmfunk")
tools::package_native_routine_registration_skeleton(".")
tools::package_native_routine_registration_skeleton(".", character_only = FALSE)
getwd()
compileAttributes(verbose=TRUE)
library(Rcpp)
compileAttributes(verbose=TRUE)
tools::package_native_routine_registration_skeleton(".", character_only = FALSE)
library(glmnet)
?glmnet
?cv.glmnet
